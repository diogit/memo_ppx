### Starting build.
# Target: memoPPX.ml.depends, tags: { extension:ml, file:memoPPX.ml, ocaml, ocamldep, quiet }
/Users/diogo/.opam/4.05.0/bin/ocamldep.opt -modules memoPPX.ml > memoPPX.ml.depends
# Target: memoPPX.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:memoPPX.cmo, file:memoPPX.ml, implem, ocaml, quiet }
/Users/diogo/.opam/4.05.0/bin/ocamlc.opt -c -I /Users/diogo/.opam/4.05.0/lib/ocaml/compiler-libs -o memoPPX.cmo memoPPX.ml
+ /Users/diogo/.opam/4.05.0/bin/ocamlc.opt -c -I /Users/diogo/.opam/4.05.0/lib/ocaml/compiler-libs -o memoPPX.cmo memoPPX.ml
File "memoPPX.ml", line 55, characters 2-141:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
{pexp_desc=(Pexp_unreachable|Pexp_constant _|Pexp_function _|Pexp_tuple _|
           Pexp_variant (_, _)|Pexp_record (_, _)|Pexp_array _|
           Pexp_override _);
_ }
# Target: memoPPX.cmx, tags: { compile, extension:cmx, extension:ml, file:memoPPX.cmx, file:memoPPX.ml, implem, native, ocaml, quiet }
/Users/diogo/.opam/4.05.0/bin/ocamlopt.opt -c -I /Users/diogo/.opam/4.05.0/lib/ocaml/compiler-libs -o memoPPX.cmx memoPPX.ml
+ /Users/diogo/.opam/4.05.0/bin/ocamlopt.opt -c -I /Users/diogo/.opam/4.05.0/lib/ocaml/compiler-libs -o memoPPX.cmx memoPPX.ml
File "memoPPX.ml", line 55, characters 2-141:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
{pexp_desc=(Pexp_unreachable|Pexp_constant _|Pexp_function _|Pexp_tuple _|
           Pexp_variant (_, _)|Pexp_record (_, _)|Pexp_array _|
           Pexp_override _);
_ }
# Target: memoPPX.native, tags: { dont_link_with, extension:native, file:memoPPX.native, link, native, ocaml, program, quiet }
/Users/diogo/.opam/4.05.0/bin/ocamlopt.opt -I /Users/diogo/.opam/4.05.0/lib/ocaml/compiler-libs /Users/diogo/.opam/4.05.0/lib/ocaml/compiler-libs/ocamlcommon.cmxa memoPPX.cmx -o memoPPX.native
# Compilation successful.
